<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Vue3</title>
      <link href="/2023/07/30/Vue3/"/>
      <url>/2023/07/30/Vue3/</url>
      
        <content type="html"><![CDATA[<h1 id="Vue3"><a href="#Vue3" class="headerlink" title="Vue3"></a>Vue3</h1><h2 id="1-vue语法初探"><a href="#1-vue语法初探" class="headerlink" title="1.vue语法初探"></a>1.vue语法初探</h2><h3 id="1-1-HelloWord"><a href="#1-1-HelloWord" class="headerlink" title="1.1 HelloWord"></a>1.1 HelloWord</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">&lt;div id=&quot;root&quot;&gt;&lt;/div&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">// 从面向dom编程到面向数据编程</span><br><span class="line">Vue.createApp(&#123;</span><br><span class="line">data()&#123;</span><br><span class="line">return &#123;</span><br><span class="line">content: 1</span><br><span class="line">&#125;</span><br><span class="line">&#125;,</span><br><span class="line">// 当页面加载完成,会自动调用mounted</span><br><span class="line">mounted() &#123;</span><br><span class="line">setInterval( ()=&gt;&#123;</span><br><span class="line">this.content++</span><br><span class="line">&#125;,1000)</span><br><span class="line">&#125;,</span><br><span class="line">template: `&lt;div&gt;&#123;&#123;content&#125;&#125;&lt;/div&gt;`</span><br><span class="line">&#125;).mount(&#x27;#root&#x27;)</span><br><span class="line">&lt;/script&gt; </span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure><p>这里要引用<code>&lt;script src=&quot;https://unpkg.com/vue@next&quot;&gt;&lt;/script&gt;</code></p><p>&#x3D;&#x3D;要慢慢将思维由面向dom到面向数据&#x3D;&#x3D;</p><h3 id="1-2-反转和隐藏"><a href="#1-2-反转和隐藏" class="headerlink" title="1.2 反转和隐藏"></a>1.2 反转和隐藏</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">   &lt;div id=&quot;root&quot;&gt;&lt;/div&gt;</span><br><span class="line">   &lt;script&gt;</span><br><span class="line">   // 从面向dom编程到面向数据编程</span><br><span class="line">   Vue.createApp(&#123;</span><br><span class="line">   data()&#123;</span><br><span class="line">   return &#123;</span><br><span class="line">   content: &#x27;helloworld&#x27;</span><br><span class="line">   &#125;</span><br><span class="line">   &#125;,</span><br><span class="line">   methods:&#123;</span><br><span class="line">   handClick()&#123;</span><br><span class="line">   this.content  = this.content.split(&#x27;&#x27;).reverse().join(&#x27;&#x27;)</span><br><span class="line">   &#125;</span><br><span class="line">   &#125;,</span><br><span class="line">   // 绑定反转函数,实习写在methods里面</span><br><span class="line">   template: `</span><br><span class="line">   &lt;div&gt;&#123;&#123;content&#125;&#125;&lt;/div&gt;</span><br><span class="line">   &lt;button @click = &quot;handClick&quot;&gt;反转&lt;/button&gt;</span><br><span class="line">   ` </span><br><span class="line">   &#125;).mount(&#x27;#root&#x27;)</span><br><span class="line">   &lt;/script&gt; </span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">&lt;div id=&quot;root&quot;&gt;&lt;/div&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">// 从面向dom编程到面向数据编程</span><br><span class="line">Vue.createApp(&#123;</span><br><span class="line">data()&#123;</span><br><span class="line">return &#123;</span><br><span class="line">show: true</span><br><span class="line">&#125;</span><br><span class="line">&#125;,</span><br><span class="line">methods:&#123;</span><br><span class="line">handClick()&#123;</span><br><span class="line">// 面向数据编程,改变数据的值</span><br><span class="line">this.show = !this.show</span><br><span class="line">&#125;</span><br><span class="line">&#125;,</span><br><span class="line">template: `</span><br><span class="line">&lt;span v-if = &quot;show&quot;&gt;hello&lt;/span&gt;</span><br><span class="line">&lt;button @click = &quot;handClick&quot;&gt;隐藏/出现&lt;/button&gt;</span><br><span class="line">` </span><br><span class="line">&#125;).mount(&#x27;#root&#x27;)</span><br><span class="line">&lt;/script&gt; </span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure><h3 id="1-3-todolist"><a href="#1-3-todolist" class="headerlink" title="1.3 todolist"></a>1.3 todolist</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">&lt;div id=&quot;root&quot;&gt;&lt;/div&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">// 从面向dom编程到面向数据编程</span><br><span class="line">Vue.createApp(&#123;</span><br><span class="line">data()&#123;</span><br><span class="line">return &#123;</span><br><span class="line">list: [],</span><br><span class="line">inputValue: &#x27;&#x27;</span><br><span class="line">&#125;</span><br><span class="line">&#125;,</span><br><span class="line">methods:&#123;</span><br><span class="line">handClick()&#123;</span><br><span class="line">this.list.push(this.inputValue)</span><br><span class="line">    inputValue = &#x27;&#x27;</span><br><span class="line">&#125;</span><br><span class="line">&#125;,</span><br><span class="line">template: `</span><br><span class="line">&lt;input v-model = &quot;inputValue&quot;&gt;</span><br><span class="line">&lt;button @click = &quot;handClick&quot;&gt;增加&lt;/button&gt;</span><br><span class="line">&lt;ul&gt;</span><br><span class="line">&lt;li v-for = &quot;(item,index) of list&quot;&gt;&#123;&#123;item&#125;&#125; &#123;&#123;index&#125;&#125;&lt;/li&gt;</span><br><span class="line">&lt;/ul&gt;</span><br><span class="line">` </span><br><span class="line">&#125;).mount(&#x27;#root&#x27;)</span><br><span class="line">&lt;/script&gt; </span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure><p>index ,是item遍历的索引</p><p><code>&lt;button @click = &quot;handClick&quot; title = &quot;222&quot;&gt;增加&lt;/button&gt;</code></p><p>这样不对,如果title要和数据绑定,需要使用v-bind指令 :title&#x3D;   </p><h3 id="1-4-组件概念初探"><a href="#1-4-组件概念初探" class="headerlink" title="1,4 组件概念初探"></a>1,4 组件概念初探</h3><p>如果<code>.mount(&#39;#root&#39;)</code>挂载了组件之后再去<code>qpp.component()</code>去创建组件就来不及了</p><p>展示组件:定义完组件之后再去挂载<code>app.mount(&#39;#root&#39;)</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id=&quot;root&quot;&gt;&lt;/div&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">// 从面向dom编程到面向数据编程</span><br><span class="line">const app = Vue.createApp(&#123;</span><br><span class="line">data()&#123;</span><br><span class="line">return &#123;</span><br><span class="line">list: [],</span><br><span class="line">inputValue: &#x27;&#x27;</span><br><span class="line">&#125;</span><br><span class="line">&#125;,</span><br><span class="line">methods:&#123;</span><br><span class="line">handClick()&#123;</span><br><span class="line">this.list.push(this.inputValue)</span><br><span class="line">&#125;</span><br><span class="line">&#125;,</span><br><span class="line">template: `</span><br><span class="line">&lt;input v-model = &quot;inputValue&quot;&gt;</span><br><span class="line">&lt;button @click = &quot;handClick&quot;&gt;增加&lt;/button&gt;</span><br><span class="line">&lt;ul&gt;</span><br><span class="line">&lt;todo-item v-for = &quot;(item, index) of list&quot;</span><br><span class="line">:content = &quot;item&quot;</span><br><span class="line">:index = &quot;index&quot;</span><br><span class="line">&gt;&lt;/todo-item&gt;</span><br><span class="line">&lt;/ul&gt;</span><br><span class="line">` </span><br><span class="line">&#125;);</span><br><span class="line">app.component(&#x27;todo-item&#x27;, &#123;</span><br><span class="line">props: [&#x27;content&#x27;, &#x27;index&#x27;],</span><br><span class="line">template: &#x27;&lt;div&gt;&#123;&#123;content&#125;&#125;----&#123;&#123;index&#125;&#125;&lt;/div&gt;&#x27;</span><br><span class="line">&#125;)</span><br><span class="line">app.mount(&#x27;#root&#x27;)</span><br><span class="line">&lt;/script&gt; </span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure><p>在这里,将li标签的属性通过组件化展示出来,:index :content分别绑定两个变量, 在组件中,由<code>props:[绑定值1,绑定值2...]</code>去接收</p><h2 id="2-Vue基础语法"><a href="#2-Vue基础语法" class="headerlink" title="2. Vue基础语法"></a>2. Vue基础语法</h2><h3 id="2-1-基础概念"><a href="#2-1-基础概念" class="headerlink" title="2.1 基础概念"></a>2.1 基础概念</h3><p>获取数据要用<code>vm.$data.xxx</code></p><p>createApp 表示创建一个Vue应用, 存储到app变量中, 传入的参数表示,这个应用最外层的组件应该如何展示</p><p>&#x3D;&#x3D;mvvm&#x3D;&#x3D;模式, m-&gt;model 数据 v-&gt;view 视图 vm -&gt; viewModel视图数据连接层</p><p>这也是为什么 const vm &#x3D; app.mount(‘#root’) vm代表的就是Vue的根组件</p><h3 id="2-2-生命周期函数"><a href="#2-2-生命周期函数" class="headerlink" title="2.2 生命周期函数"></a>2.2 生命周期函数</h3><p><strong>在某一时刻会自动执行的函数</strong></p><p>比如之前的 mounted(){}</p><p><img src="D:\typoral\图片\image-20230730205903567.png" alt="image-20230730205903567"></p><p>图里面的判断意思是. 如果没有template 就去root挂载的根节点去找innerHtml结构</p><p><img src="D:\typoral\图片\image-20230730210226446.png" alt="image-20230730210226446"></p><p><img src="D:\typoral\图片\image-20230730210418348.png" alt="image-20230730210418348"></p><p><img src="D:\typoral\图片\image-20230730210503916.png" alt="image-20230730210503916"></p><p><img src="D:\typoral\图片\image-20230730210625949.png" alt="image-20230730210625949"></p><p><code>beforeUpdate</code>是在数据改变(页面还没有渲染时调用)</p><p><code>updated</code>是在页面重新渲染完之后调用,注意二者区别!</p><p>beforeUnmount(){} 当Vue应用失效时,自动执行的函数</p><p>unmounted(){} 当Vue应用失效时,且dom完全销毁后,自动执行的函数</p><p><img src="D:\typoral\图片\image-20230730211407402.png" alt="image-20230730211407402"></p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue3 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>有序数组的平方</title>
      <link href="/2023/07/30/%E6%9C%89%E5%BA%8F%E6%95%B0%E7%BB%84%E7%9A%84%E5%B9%B3%E6%96%B9/"/>
      <url>/2023/07/30/%E6%9C%89%E5%BA%8F%E6%95%B0%E7%BB%84%E7%9A%84%E5%B9%B3%E6%96%B9/</url>
      
        <content type="html"><![CDATA[<blockquote><p>Problem: <a href="https://leetcode.cn/problems/squares-of-a-sorted-array/description/">977. 有序数组的平方</a></p></blockquote><p>[TOC]</p><h1 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h1><blockquote><p>首先这道题可以直接用暴力,for循环.加一个函数方法sort<br>但会提高实践复杂度,用双指针会优化</p></blockquote><h1 id="解题方法"><a href="#解题方法" class="headerlink" title="解题方法"></a>解题方法</h1><blockquote><p>因为非递减数组,在两边的平方要么是最大,要么是最小,一定是在两边,所以这时候可以用双指针,在数组两边定义两个指针,当左边的平方小于右边的平方,就往一个新数组放,放在最大索引处,然后左边++,同理,右边–.直到左边小于右边</p></blockquote><h1 id="复杂度"><a href="#复杂度" class="headerlink" title="复杂度"></a>复杂度</h1><ul><li>时间复杂度: <blockquote><p>$O(n)$</p></blockquote></li></ul><h1 id="Code"><a href="#Code" class="headerlink" title="Code"></a>Code</h1><h2 id="暴力"><a href="#暴力" class="headerlink" title="暴力"></a>暴力</h2><figure class="highlight java"><figcaption><span>[]</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span>[] sortedSquares(<span class="type">int</span>[] nums) &#123;</span><br><span class="line">        <span class="type">int</span>[] res = nums;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span> ; i &lt; nums.length; i++)&#123;</span><br><span class="line">            res[i] *= nums[i];</span><br><span class="line">        &#125;                   </span><br><span class="line">        Arrays.sort(res) ;<span class="comment">//如果递减就  Arrays.sort(a, Collections.reverseOrder());</span></span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="双指针"><a href="#双指针" class="headerlink" title="双指针"></a>双指针</h2><figure class="highlight java"><figcaption><span>[]</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span>[] sortedSquares(<span class="type">int</span>[] nums) &#123;</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> []res = <span class="keyword">new</span> <span class="title class_">int</span>[nums.length]; <span class="comment">//递增存到新数组中</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">k</span> <span class="operator">=</span> nums.length-<span class="number">1</span>; <span class="comment">//新数组的索引</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">l</span> <span class="operator">=</span> <span class="number">0</span>, r = nums.length-<span class="number">1</span>; l &lt;= r; )&#123;</span><br><span class="line">            <span class="keyword">if</span>(nums[l]*nums[l] &lt;= nums[r]*nums[r]) &#123;</span><br><span class="line">                 res[k--] = nums[r]*nums[r];</span><br><span class="line">                 r --;</span><br><span class="line">            &#125;</span><br><span class="line">               </span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                res[k--] = nums[l]*nums[l];</span><br><span class="line">                l++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 双指针 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>移除元素</title>
      <link href="/2023/07/29/%E7%A7%BB%E9%99%A4%E5%85%83%E7%B4%A0/"/>
      <url>/2023/07/29/%E7%A7%BB%E9%99%A4%E5%85%83%E7%B4%A0/</url>
      
        <content type="html"><![CDATA[<blockquote><p>Problem: <a href="https://leetcode.cn/problems/remove-element/description/">27. 移除元素</a></p></blockquote><p>[TOC]</p><h1 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h1><blockquote><p>首先可以用暴力,两层for循环.但O(n^2)<br>快慢双指针:通过两个指针,来对数组进行处理</p></blockquote><h1 id="解题方法"><a href="#解题方法" class="headerlink" title="解题方法"></a>解题方法</h1><blockquote><p>首先定义一个慢指针si,然后再循环中定义一个快指针fi,然后通过判断fi和val1是否相等,如果相等,说明这个值要被覆盖,所以慢指针停止,快指针向后,直到快指针和对应的val2不相等,就可一将这个值覆盖到val1的位置上,然后将<code>si++</code>,直到遍历完整个数组</p></blockquote><h1 id="复杂度"><a href="#复杂度" class="headerlink" title="复杂度"></a>复杂度</h1><ul><li><p>时间复杂度: </p><blockquote><p>$O(n)$</p></blockquote></li><li><p>空间复杂度: </p><blockquote><p>$O(1)$</p></blockquote></li></ul><h1 id="Code"><a href="#Code" class="headerlink" title="Code"></a>Code</h1><figure class="highlight java"><figcaption><span>[]</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">removeElement</span><span class="params">(<span class="type">int</span>[] nums, <span class="type">int</span> val)</span> &#123;</span><br><span class="line">        <span class="comment">// 定义快指针和慢指针</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">si</span> <span class="operator">=</span> <span class="number">0</span>; <span class="comment">//慢指针,快指针因为要不断更新,所以要在for中</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">fi</span> <span class="operator">=</span> <span class="number">0</span>; fi &lt; nums.length; fi++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(nums[fi] != val)&#123; <span class="comment">//慢指针更新的条件</span></span><br><span class="line">                nums[si++] = nums[fi]; <span class="comment">// 将符合条件的元素往不符合条件的元素覆盖</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> si;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 双指针 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>二分(一)</title>
      <link href="/2023/07/28/%E4%BA%8C%E5%88%86-%E4%B8%80/"/>
      <url>/2023/07/28/%E4%BA%8C%E5%88%86-%E4%B8%80/</url>
      
        <content type="html"><![CDATA[<hr><h2 id="title-二分-一-date-2023-07-28-21-51-36找数"><a href="#title-二分-一-date-2023-07-28-21-51-36找数" class="headerlink" title="title: 二分(一)date: 2023-07-28 21:51:36找数"></a>title: 二分(一)<br>date: 2023-07-28 21:51:36<br>找数</h2><blockquote><p>Problem: <a href="https://leetcode.cn/problems/binary-search/description/">704. 二分查找</a></p></blockquote><p>[TOC]</p><h1 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h1><blockquote><p>简单的二分查找,根据target在mid(相对两端的位置)的左边还是右边,判断right,left在新一轮while循环的位置,知道right &#x3D; left</p></blockquote><h1 id="解题方法"><a href="#解题方法" class="headerlink" title="解题方法"></a>解题方法</h1><blockquote><p>以right &#x3D;&#x3D; left(两边顶点)为终止条件,根据左闭又开或左闭右闭来调整每一轮循环之后right和left两边端点的位置.始终将target在端点之间,知道right &#x3D; left</p></blockquote><h1 id="复杂度"><a href="#复杂度" class="headerlink" title="复杂度"></a>复杂度</h1><ul><li><p>时间复杂度: </p><blockquote><p>O(log n)</p></blockquote></li><li><p>空间复杂度: </p><blockquote><p>O(1)</p></blockquote></li></ul><h1 id="Code"><a href="#Code" class="headerlink" title="Code"></a>Code</h1><figure class="highlight java"><figcaption><span>[]</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">search</span><span class="params">(<span class="type">int</span>[] nums, <span class="type">int</span> target)</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">left</span> <span class="operator">=</span> <span class="number">0</span>, right = nums.length;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span>(left &lt; right) &#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">mid</span> <span class="operator">=</span> right+left &gt;&gt; <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span>(nums[mid] &gt; target)&#123;</span><br><span class="line">                right = mid;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(nums[mid] &lt; target)&#123;</span><br><span class="line">                left = mid+<span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">return</span> mid;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 二分 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>My first blog</title>
      <link href="/2023/07/28/My-first-blog/"/>
      <url>/2023/07/28/My-first-blog/</url>
      
        <content type="html"><![CDATA[<h1 id="纪念"><a href="#纪念" class="headerlink" title="纪念"></a>纪念</h1>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
